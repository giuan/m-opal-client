/* Generated by Opal 0.9.0.beta2 */
(function(Opal) {
  Opal.dynamic_require_severity = "error";
  var OPAL_CONFIG = { method_missing: true, arity_check: false, freezing: true, tainting: true };
  function $rb_plus(lhs, rhs) {
    return (typeof(lhs) === 'number' && typeof(rhs) === 'number') ? lhs + rhs : lhs['$+'](rhs);
  }
  var $a, $b, TMP_1, self = Opal.top, $scope = Opal, nil = Opal.nil, $breaker = Opal.breaker, $slice = Opal.slice, $klass = Opal.klass, ready = nil;

  Opal.add_stubs(['$proxy_attr_accessor', '$proxy_attr_reader_rbox', '$lambda', '$new', '$innerHTML=', '$bench', '$puts', '$measure', '$times', '$+', '$value', '$Native']);
  (function($base, $super) {
    function $Element(){};
    var self = $Element = $klass($base, $super, 'Element', $Element);

    var def = self.$$proto, $scope = self.$$scope;

    self.$proxy_attr_accessor("innerHTML");

    return self.$proxy_attr_accessor("value");
  })($scope.base, $scope.get('RBox'));
  (function($base, $super) {
    function $Event(){};
    var self = $Event = $klass($base, $super, 'Event', $Event);

    var def = self.$$proto, $scope = self.$$scope;

    return self.$proxy_attr_reader_rbox("target")
  })($scope.base, $scope.get('RBox'));
  ready = ($a = ($b = self).$lambda, $a.$$p = (TMP_1 = function(){var self = TMP_1.$$s || this, $a, $b, TMP_2, _msg = nil, _btn = nil, msg = nil, button = nil;

  _msg = (document).getElementById("message");
    _btn = (document).getElementById("button");
    msg = $scope.get('Element').$new(_msg);
    (($a = ["Hello from rbox"]), $b = msg, $b['$innerHTML='].apply($b, $a), $a[$a.length-1]);
    button = (document).getElementById("button");
    button.addEventListener("click", ($a = ($b = self).$lambda, $a.$$p = (TMP_2 = function(e){var self = TMP_2.$$s || this;
if (e == null) e = nil;
    return self.$bench()}, TMP_2.$$s = self, TMP_2), $a).call($b));
    return (Opal.def(self, '$bench', function() {
      var $a, $b, TMP_3, $c, TMP_5, $d, TMP_7, $e, TMP_9, $f, TMP_10, $g, TMP_12, self = this, _msg = nil, _btn = nil, n = nil;

      _msg = (document).getElementById("message");
      _btn = (document).getElementById("button");
      n = 100000;
      self.$puts("RBox");
      self.$puts(($a = ($b = $scope.get('Benchmark')).$measure, $a.$$p = (TMP_3 = function(){var self = TMP_3.$$s || this, $a, $b, TMP_4, msg = nil, btn = nil;

      msg = $scope.get('Element').$new(_msg);
        btn = $scope.get('Element').$new(_btn);
        return ($a = ($b = n).$times, $a.$$p = (TMP_4 = function(){var self = TMP_4.$$s || this, $a, $b;

        return (($a = [$rb_plus("<br>", btn.$value())]), $b = msg, $b['$innerHTML='].apply($b, $a), $a[$a.length-1])}, TMP_4.$$s = self, TMP_4), $a).call($b);}, TMP_3.$$s = self, TMP_3), $a).call($b));
      self.$puts("Native");
      self.$puts(($a = ($c = $scope.get('Benchmark')).$measure, $a.$$p = (TMP_5 = function(){var self = TMP_5.$$s || this, $a, $b, TMP_6, msg = nil, btn = nil;

      msg = self.$Native(_msg);
        btn = self.$Native(_btn);
        return ($a = ($b = n).$times, $a.$$p = (TMP_6 = function(){var self = TMP_6.$$s || this, $a, $b;

        return (($a = [$rb_plus("<br>", btn.$value())]), $b = msg, $b['$innerHTML='].apply($b, $a), $a[$a.length-1])}, TMP_6.$$s = self, TMP_6), $a).call($b);}, TMP_5.$$s = self, TMP_5), $a).call($c));
      self.$puts(".JS.");
      self.$puts(($a = ($d = $scope.get('Benchmark')).$measure, $a.$$p = (TMP_7 = function(){var self = TMP_7.$$s || this, $a, $b, TMP_8;

      return ($a = ($b = n).$times, $a.$$p = (TMP_8 = function(){var self = TMP_8.$$s || this;

        return _msg["innerHTML"]=$rb_plus("<br>", _btn["value"])}, TMP_8.$$s = self, TMP_8), $a).call($b)}, TMP_7.$$s = self, TMP_7), $a).call($d));
      self.$puts("Javascript");
      self.$puts(($a = ($e = $scope.get('Benchmark')).$measure, $a.$$p = (TMP_9 = function(){var self = TMP_9.$$s || this;

      
         for (var i=0; i <= n; i++) {
           _msg.innerHTML = "<br>" + _btn.value
         }
       }, TMP_9.$$s = self, TMP_9), $a).call($e));
      self.$puts("Opal n.times");
      self.$puts(($a = ($f = $scope.get('Benchmark')).$measure, $a.$$p = (TMP_10 = function(){var self = TMP_10.$$s || this, $a, $b, TMP_11;

      return ($a = ($b = n).$times, $a.$$p = (TMP_11 = function(){var self = TMP_11.$$s || this;

        return nil}, TMP_11.$$s = self, TMP_11), $a).call($b)}, TMP_10.$$s = self, TMP_10), $a).call($f));
      self.$puts("Javascript for");
      return self.$puts(($a = ($g = $scope.get('Benchmark')).$measure, $a.$$p = (TMP_12 = function(){var self = TMP_12.$$s || this;

      
         for (var i=0; i <= n; i++) {
         }
       }, TMP_12.$$s = self, TMP_12), $a).call($g));
    }), nil) && 'bench';}, TMP_1.$$s = self, TMP_1), $a).call($b);
  return (document.body)["onload"]=ready;
})(Opal);
